<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
</head>
<link rel="stylesheet" href="/assets/css/style.css">
<script src="/socket.io/socket.io.js"></script>
<script>
  let socket = io();


  // start chat app
  function startChat() {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);

    const conversationId = urlParams.get('conversationId')
    console.log(conversationId);

    if (conversationId != null) {
      setUserId(conversationId);
    } else {
      setUserId();
    }

  }


  function setUserId(conversationId = false) {
    let data;
    let userId = sessionStorage.getItem("username");
    let cId = sessionStorage.getItem("conversationId");

    if (userId == null) {
      let uniqeId = "id" + Math.random().toString(16).slice(2)
      sessionStorage.setItem("username", uniqeId);
    }
    if (cId == null) {
      let cuniqeId = "cid" + Math.random().toString(16).slice(2)
      sessionStorage.setItem("conversationId", cuniqeId);
    }
    if (conversationId) {

      data = {
        userId: sessionStorage.getItem("username"),
        conversationId: conversationId,
        isConversation: true
      }
    } else {
      data = {
        userId: sessionStorage.getItem("username"),
        conversationId: sessionStorage.getItem("conversationId"),
        isConversation: false
      }
    }
    socket.emit('setUserId', data);
  };


  let user;
  let participant;
  let conversation;
  socket.on('userExists', function(data) {
    document.getElementById('error-container').innerHTML = data;
  });
  socket.on('userSet', function(data) {
    user = data.username;
    participant = data.participant;
    conversation = data.conversation;
    let privateLink = window.location.origin + "/private?conversationId=" + conversation;
    document.body.innerHTML = `
    <div id="message-container"></div>
    <input type="text" id="message">
    <button type="button" name="button" onclick="sendMessage()">Send</button>
    <button type="button" onclick="location.reload();">New connection</button>
    <div class="info-container">
      <div>Share: 
        <br/>
        <label>${privateLink}</label>
        
      </div>
      <br/>
      <div>userId: ${user}</div>
      <div>participantId: ${participant}</div>
      <div>conversationId: ${conversation}</div>
    </div>
    `;

  });

  function sendMessage() {
    let msg = document.getElementById('message').value;
    if (msg) {
      socket.emit('msg', {
        message: msg,
        user: user,
        participant: participant,
        conversation: conversation
      });
      document.getElementById('message').value = ''
    }
  }
  socket.on('newmsg', function(data) {
    console.log(conversation);
    console.log(data);
    if (conversation == data.conversation) {
      document.getElementById('message-container').innerHTML += '<div><b>' + data.user + '</b>: ' + data.message + '</div>'
    } else {
      document.getElementById("nohere").innerHTML = "No one connected. Please refresh again";
    }
  })
</script>

<body>
  <div id="error-container"></div>
  <!-- <input id="name" type="text" name="name" value="" placeholder="Enter your name!">
  <button type="button" name="button" onclick="setUsername()">Let me chat!</button> -->
  <button class="start-btn" type="button" name="button" onclick="startChat()">Start</button>
</body>

</html>